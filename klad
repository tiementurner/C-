Fixed point met base 10

getal: 10 
fractional bits : 1
== 10.0 << 1 (bitshift with base 10 means move decimal point 1 place to the right)
== fixed point stored value = 100

getal: 10.5
fractional bits : 1
== 10.5 << 1
== fixed point stored value = 105
== 

    a = 2;
    b = 2;
    std::cout << &b << std::endl;
    std::cout << &::max(a, b) << std::endl;
    std::cout << &b << std::endl;
    std::cout << &::min(a, b) << std::endl;



        std::list<int> int_list(10, 3);
    std::list<int>::iterator list_result;
    int_list.push_front(2);

    print_seq_container(int_list);

    try{list_result = easyfind(int_list, 12);}
    catch(const std::invalid_argument &e){std::cout << e.what() << std::endl; }
    list_result = easyfind(int_list, 2);
    std::cout << "result: " << *list_result << std::endl;
    std::advance(list_result, 1);
    std::cout << "result after advancing one: " << *list_result << std::endl << std::endl;